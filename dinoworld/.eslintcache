[{"/home/roman/Documentos/Repo/dinoworld/src/index.js":"1","/home/roman/Documentos/Repo/dinoworld/src/App.js":"2","/home/roman/Documentos/Repo/dinoworld/src/layout/Navbar.js":"3","/home/roman/Documentos/Repo/dinoworld/src/layout/Footer.js":"4","/home/roman/Documentos/Repo/dinoworld/src/pages/Home.js":"5","/home/roman/Documentos/Repo/dinoworld/src/pages/TopDinos.js":"6","/home/roman/Documentos/Repo/dinoworld/src/pages/Dino.js":"7","/home/roman/Documentos/Repo/dinoworld/src/pages/Table.js":"8","/home/roman/Documentos/Repo/dinoworld/src/pages/CardGame.js":"9","/home/roman/Documentos/Repo/dinoworld/src/pages/Periods.js":"10","/home/roman/Documentos/Repo/dinoworld/src/pages/Favourite.js":"11","/home/roman/Documentos/Repo/dinoworld/src/pages/FormLogIn.js":"12","/home/roman/Documentos/Repo/dinoworld/src/pages/FormSignUp.js":"13","/home/roman/Documentos/Repo/dinoworld/src/pages/EditDino.js":"14","/home/roman/Documentos/Repo/dinoworld/src/layout/SidebarData.js":"15","/home/roman/Documentos/Repo/dinoworld/src/components/TopDinosComponent/TopDinosComponent.js":"16","/home/roman/Documentos/Repo/dinoworld/src/components/DinoComponent/DinoComponent.js":"17","/home/roman/Documentos/Repo/dinoworld/src/components/TableComponent/TableComponent.js":"18","/home/roman/Documentos/Repo/dinoworld/src/components/PeriodsComponent/PeriodsComponent.js":"19","/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/CardGameComponent.js":"20","/home/roman/Documentos/Repo/dinoworld/src/components/FavouriteComponent/FavouriteComponent.js":"21","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogInComponent.js":"22","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUpComponent.js":"23","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoComponent.js":"24","/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/HomeComponent.js":"25","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogIn.js":"26","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccessLogIn.js":"27","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUp.js":"28","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccess.js":"29","/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/PaginationComponent.js":"30","/home/roman/Documentos/Repo/dinoworld/src/components/DinoCardComponent/DinoCardComponent.js":"31","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoForm.js":"32","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/FormSuccessAddDino.js":"33","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormLogIn.js":"34","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormLogIn.js":"35","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormSignUp.js":"36","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormSignUp.js":"37","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/useFormAddDino.js":"38","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/validateFormAddDino.js":"39","/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/DinoCardGameComponent.js":"40"},{"size":244,"mtime":1610638756874,"results":"41","hashOfConfig":"42"},{"size":1676,"mtime":1616604039180,"results":"43","hashOfConfig":"42"},{"size":3410,"mtime":1616693954219,"results":"44","hashOfConfig":"42"},{"size":529,"mtime":1616177336399,"results":"45","hashOfConfig":"42"},{"size":1052,"mtime":1617009668618,"results":"46","hashOfConfig":"42"},{"size":587,"mtime":1616615654494,"results":"47","hashOfConfig":"42"},{"size":168,"mtime":1616177519011,"results":"48","hashOfConfig":"42"},{"size":1084,"mtime":1616782138590,"results":"49","hashOfConfig":"42"},{"size":696,"mtime":1616783802248,"results":"50","hashOfConfig":"42"},{"size":307,"mtime":1616178212730,"results":"51","hashOfConfig":"42"},{"size":701,"mtime":1616693995959,"results":"52","hashOfConfig":"42"},{"size":319,"mtime":1616521899767,"results":"53","hashOfConfig":"42"},{"size":187,"mtime":1616177997405,"results":"54","hashOfConfig":"42"},{"size":198,"mtime":1616177560629,"results":"55","hashOfConfig":"42"},{"size":915,"mtime":1616615402044,"results":"56","hashOfConfig":"42"},{"size":427,"mtime":1616178627837,"results":"57","hashOfConfig":"42"},{"size":1880,"mtime":1616693635695,"results":"58","hashOfConfig":"42"},{"size":5306,"mtime":1617055621497,"results":"59","hashOfConfig":"42"},{"size":241,"mtime":1616177213315,"results":"60","hashOfConfig":"42"},{"size":1650,"mtime":1617009023373,"results":"61","hashOfConfig":"42"},{"size":373,"mtime":1616613730648,"results":"62","hashOfConfig":"42"},{"size":529,"mtime":1616693785726,"results":"63","hashOfConfig":"42"},{"size":423,"mtime":1616325902323,"results":"64","hashOfConfig":"42"},{"size":442,"mtime":1616508019582,"results":"65","hashOfConfig":"42"},{"size":919,"mtime":1616178470228,"results":"66","hashOfConfig":"42"},{"size":1669,"mtime":1616524138952,"results":"67","hashOfConfig":"42"},{"size":204,"mtime":1616330404495,"results":"68","hashOfConfig":"42"},{"size":3643,"mtime":1616693800038,"results":"69","hashOfConfig":"42"},{"size":204,"mtime":1616330361183,"results":"70","hashOfConfig":"42"},{"size":718,"mtime":1616178571706,"results":"71","hashOfConfig":"42"},{"size":2103,"mtime":1617051292795,"results":"72","hashOfConfig":"42"},{"size":6511,"mtime":1616697916569,"results":"73","hashOfConfig":"42"},{"size":219,"mtime":1616508019582,"results":"74","hashOfConfig":"42"},{"size":1883,"mtime":1616693877796,"results":"75","hashOfConfig":"42"},{"size":494,"mtime":1616329809889,"results":"76","hashOfConfig":"42"},{"size":1548,"mtime":1616696403151,"results":"77","hashOfConfig":"42"},{"size":900,"mtime":1616694125688,"results":"78","hashOfConfig":"42"},{"size":2368,"mtime":1616703114208,"results":"79","hashOfConfig":"42"},{"size":772,"mtime":1616693582373,"results":"80","hashOfConfig":"42"},{"size":1066,"mtime":1617008941420,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"11cf2xb",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},"/home/roman/Documentos/Repo/dinoworld/src/index.js",[],["170","171"],"/home/roman/Documentos/Repo/dinoworld/src/App.js",[],"/home/roman/Documentos/Repo/dinoworld/src/layout/Navbar.js",[],"/home/roman/Documentos/Repo/dinoworld/src/layout/Footer.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Home.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/TopDinos.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Dino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Table.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/CardGame.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Periods.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Favourite.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/FormLogIn.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/FormSignUp.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/EditDino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/layout/SidebarData.js",[],["172","173"],"/home/roman/Documentos/Repo/dinoworld/src/components/TopDinosComponent/TopDinosComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/DinoComponent/DinoComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/TableComponent/TableComponent.js",["174","175","176","177","178","179","180","181"],"import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nexport default function TableComponent({ dinos }) {\n  // Assign to false and change to true when button is clicked we make a toggle\n\n  const [ascendOrder, setAscendOrder] = useState(false);\n\n  //Use one function with switch statement inside to sort diferent table columns\n\n  const orderBy = e => {\n    setAscendOrder(!ascendOrder);\n\n    //Using text content of event target we can sort values of that column which has triggered the event\n\n    switch (e.target.textContent) {\n      case \"Weight\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder ? a.weight - b.weight : b.weight - a.weight;\n        });\n        break;\n      }\n      case \"Height\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder ? a.height - b.height : b.height - a.height;\n        });\n        break;\n      }\n      case \"Name\": {\n        let sortData = dinos.sort((a, b) => {\n          //With localeCompare string prototype we can sort strings\n          return ascendOrder\n            ? a.name.localeCompare(b.name)\n            : b.name.localeCompare(a.name);\n        });\n        break;\n      }\n      case \"Length\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder ? a.lenght - b.lenght : b.lenght - a.lenght;\n        });\n        break;\n      }\n      case \"Diet\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder\n            ? a.diet.name.localeCompare(b.diet.name)\n            : b.diet.name.localeCompare(a.diet.name);\n        });\n        break;\n      }\n      case \"Period\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder\n            ? a.period.name.localeCompare(b.period.name)\n            : b.period.name.localeCompare(a.period.name);\n        });\n        break;\n      }\n      case \"Continent\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder\n            ? a.continent.name.localeCompare(b.continent.name)\n            : b.continent.name.localeCompare(a.continent.name);\n        });\n        break;\n      }\n      case \"Top Speed\": {\n        let sortData = dinos.sort((a, b) => {\n          return ascendOrder\n            ? a.top_speed - b.top_speed\n            : b.top_speed - a.top_speed;\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <table className=\" table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Name\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Weight\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Height\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Length\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Diet\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Top Speed\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Period\n              </button>\n            </th>\n            <th scope=\"col\">\n              <button\n                className=\"button-table-sort\"\n                type=\"button\"\n                onClick={orderBy}\n              >\n                Continent\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {dinos.map(dino => {\n            return (\n              //Will need to change to an index as a key and add link to every dino\n              <tr key={dino.ID} className=\"\">\n                <td>\n                  <Link\n                    to={`/Dino/${dino.ID}`}\n                    style={{ textDecoration: \"none\", color: \"rgb(53, 53, 53)\" }}\n                  >\n                    {dino.name}\n                  </Link>\n                </td>\n                <td>{dino.weight}</td>\n                <td>{dino.height}</td>\n                <td>{dino.lenght}</td>\n                <td>{dino.diet.name}</td>\n                <td>{dino.top_speed}</td>\n                <td>{dino.period.name}</td>\n                <td>{dino.continent.name}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/home/roman/Documentos/Repo/dinoworld/src/components/PeriodsComponent/PeriodsComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/CardGameComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FavouriteComponent/FavouriteComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogInComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUpComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/HomeComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogIn.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccessLogIn.js",[],["182","183"],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUp.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccess.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/PaginationComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/DinoCardComponent/DinoCardComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoForm.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/FormSuccessAddDino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormLogIn.js",["184"],"import { useState, useEffect } from \"react\";\n// import jwt_decode from \"jwt-decode\";\nimport { urlApi } from \"../../App\";\nimport { DinoContext } from \"../../App\";\nimport { useContext } from \"react\";\n\n//Creating a custom hook for form validation\n\nconst useForm = (callback, validateForm) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const { setJwt } = useContext(DinoContext);\n\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n    console.log(errors);\n    setErrors(validateForm(values));\n    setIsSubmitting(true);\n    // console.log(errors);\n    console.log(values);\n\n    fetch(`${urlApi}/login`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(\"Respuesta: \", response);\n          if (response.code === 401) {\n            alert(\"Invalid email or password\"); // Need to add some validation here\n          } else {\n            localStorage.setItem(\"mitoken\", response.token);\n            // const decoded = jwt_decode(response.token);\n\n            setJwt(response.token);\n          }\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useForm;\n","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormLogIn.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormSignUp.js",["185"],"import { useState, useEffect } from \"react\";\nimport { urlApi } from \"../../App\";\n// import jwt_decode from \"jwt-decode\";\n\n//Creating a custom hook for form validation\n\nconst useFormSignUp = (callback, validateForm) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    lastname: \"\",\n    birthdate: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  });\n\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n\n    setErrors(validateForm(values));\n    setIsSubmitting(true);\n\n    console.log(values);\n\n    fetch(`${urlApi}/register/user`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  //Check if there are not errors and if not then return isSubmitting\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useFormSignUp;\n","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormSignUp.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/useFormAddDino.js",["186"],"import { useState, useEffect } from \"react\";\nimport { urlApi } from \"../../App\";\n\n//Creating a custom hook for form validation\n\nconst useFormAddDino = (callback, validateFormAddDino) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    weight: \"\",\n    height: \"\",\n    lenght: \"\",\n    top_speed: \"\",\n    period: \"\",\n    diet: \"\",\n    continent: \"\",\n    top: \"\",\n    info: \"\",\n    img: []\n  });\n\n  //\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  //Handlind form inserts and set them to the values\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  //Handling inserted file (img)\n\n  const handleFile = e => {\n    // console.log(values);\n    // console.log(e.target);\n    const { name, files } = e.target;\n    // console.log(name, files);\n    setValues({\n      ...values,\n      [name]: files[0]\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n\n    setErrors(validateFormAddDino(values));\n    setIsSubmitting(true);\n\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"weight\", values.weight);\n    formData.append(\"height\", values.height);\n    formData.append(\"lenght\", values.lenght);\n    formData.append(\"top_speed\", values.top_speed);\n    formData.append(\"period\", values.period);\n    formData.append(\"diet\", values.diet);\n    formData.append(\"continent\", values.continent);\n    formData.append(\"top\", values.top);\n    formData.append(\"info\", values.info);\n    formData.append(\"img\", values.img);\n\n    console.log(formData);\n\n    fetch(`${urlApi}/register/dinosaur`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      body: formData\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  //Check if there are not errors and if not then return isSubmitting\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleFile, handleChange, values, handleSubmit, errors };\n};\n\nexport default useFormAddDino;\n","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/validateFormAddDino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/DinoCardGameComponent.js",["187","188"],"import { urlApi } from \"../../App\";\nimport { useState } from \"react\";\n\nexport default function DinoCardGameComponent({\n  ID,\n  name,\n  img,\n  clickedNames,\n  setClickedNames,\n  clickedID,\n  setClickedID\n}) {\n  // const { jwt } = useContext(DinoContext);\n  // const [clickedNames, setClickedName] = useState([]);\n  // const [clickedID, setClickedID] = useState([]);\n\n  function checkForMatch() {\n    const firstDino = clickedNames[0];\n    const secondDino = clickedNames[1];\n\n    if (firstDino === secondDino) {\n      alert(\"You found the match\");\n    }\n  }\n\n  function flipCard() {\n    console.log(`card fliped ${ID}`);\n    // const newClickedName = clickedName.push(name);\n    // const newClickedID = clickedID.push(ID);\n\n    setClickedNames(clickedNames => [...clickedNames, name]);\n    setClickedID(clickedID => [...clickedID, ID]);\n\n    console.log(clickedNames.length);\n  }\n\n  return (\n    <>\n      <div className=\"grid-card\" onClick={() => flipCard()}>\n        <img src={`${urlApi}/images/${img}`} alt=\"\" />\n        <h3>{name}</h3>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":18,"column":13,"nodeType":"197","messageId":"198","endLine":18,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":24,"column":13,"nodeType":"197","messageId":"198","endLine":24,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":30,"column":13,"nodeType":"197","messageId":"198","endLine":30,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":39,"column":13,"nodeType":"197","messageId":"198","endLine":39,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":45,"column":13,"nodeType":"197","messageId":"198","endLine":45,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":53,"column":13,"nodeType":"197","messageId":"198","endLine":53,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":61,"column":13,"nodeType":"197","messageId":"198","endLine":61,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":69,"column":13,"nodeType":"197","messageId":"198","endLine":69,"endColumn":21},{"ruleId":"189","replacedBy":"199"},{"ruleId":"191","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":70,"column":6,"nodeType":"203","endLine":70,"endColumn":14,"suggestions":"204"},{"ruleId":"201","severity":1,"message":"202","line":63,"column":6,"nodeType":"203","endLine":63,"endColumn":14,"suggestions":"205"},{"ruleId":"201","severity":1,"message":"202","line":92,"column":6,"nodeType":"203","endLine":92,"endColumn":14,"suggestions":"206"},{"ruleId":"195","severity":1,"message":"207","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":18},{"ruleId":"195","severity":1,"message":"208","line":17,"column":12,"nodeType":"197","messageId":"198","endLine":17,"endColumn":25},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],["209"],["210"],"no-unused-vars","'sortData' is assigned a value but never used.","Identifier","unusedVar",["209"],["210"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["211"],["212"],["213"],"'useState' is defined but never used.","'checkForMatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"214","fix":"217"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"218","text":"219"},{"range":"220","text":"219"},{"range":"221","text":"219"},[1786,1794],"[callback, errors, isSubmitting]",[1445,1453],[2252,2260]]