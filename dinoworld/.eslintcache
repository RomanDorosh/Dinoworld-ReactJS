[{"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/index.js":"1","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/App.js":"2","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/layout/Navbar.js":"3","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/layout/Footer.js":"4","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Home.js":"5","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/TopDinos.js":"6","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Dino.js":"7","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Table.js":"8","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/CardGame.js":"9","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Periods.js":"10","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Favourite.js":"11","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/FormLogIn.js":"12","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/FormSignUp.js":"13","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/EditDino.js":"14","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/layout/SidebarData.js":"15","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/HomeComponent/HomeComponent.js":"16","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/TopDinosComponent/TopDinosComponent.js":"17","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/DinoComponent/DinoComponent.js":"18","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/TableComponent/TableComponent.js":"19","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/CardGameComponent/CardGameComponent.js":"20","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/PeriodsComponent/PeriodsComponent.js":"21","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FavouriteComponent/FavouriteComponent.js":"22","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormLogInComponent.js":"23","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSignUpComponent.js":"24","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/AddDinoComponent.js":"25","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/HomeComponent/PaginationComponent.js":"26","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormLogIn.js":"27","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSuccessLogIn.js":"28","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSignUp.js":"29","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSuccess.js":"30","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/DinoCardComponent/DinoCardComponent.js":"31","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/useFormLogIn.js":"32","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/validateFormLogIn.js":"33","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/useFormSignUp.js":"34","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/validateFormSignUp.js":"35","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/useFormAddDino.js":"36","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/AddDinoForm.js":"37","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/validateFormAddDino.js":"38","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/FormSuccessAddDino.js":"39"},{"size":244,"mtime":1616428988052,"results":"40","hashOfConfig":"41"},{"size":1808,"mtime":1616430097770,"results":"42","hashOfConfig":"41"},{"size":2074,"mtime":1616428988052,"results":"43","hashOfConfig":"41"},{"size":529,"mtime":1616428988052,"results":"44","hashOfConfig":"41"},{"size":1032,"mtime":1616431104829,"results":"45","hashOfConfig":"41"},{"size":316,"mtime":1616428988052,"results":"46","hashOfConfig":"41"},{"size":168,"mtime":1616428988052,"results":"47","hashOfConfig":"41"},{"size":858,"mtime":1616428988052,"results":"48","hashOfConfig":"41"},{"size":318,"mtime":1616428988052,"results":"49","hashOfConfig":"41"},{"size":307,"mtime":1616428988052,"results":"50","hashOfConfig":"41"},{"size":220,"mtime":1616428988052,"results":"51","hashOfConfig":"41"},{"size":184,"mtime":1616428988052,"results":"52","hashOfConfig":"41"},{"size":187,"mtime":1616428988052,"results":"53","hashOfConfig":"41"},{"size":198,"mtime":1616428988052,"results":"54","hashOfConfig":"41"},{"size":915,"mtime":1616428988052,"results":"55","hashOfConfig":"41"},{"size":919,"mtime":1616428988008,"results":"56","hashOfConfig":"41"},{"size":427,"mtime":1616428988008,"results":"57","hashOfConfig":"41"},{"size":1563,"mtime":1616432143548,"results":"58","hashOfConfig":"41"},{"size":1432,"mtime":1616428988008,"results":"59","hashOfConfig":"41"},{"size":187,"mtime":1616428988008,"results":"60","hashOfConfig":"41"},{"size":241,"mtime":1616428988008,"results":"61","hashOfConfig":"41"},{"size":598,"mtime":1616428988008,"results":"62","hashOfConfig":"41"},{"size":469,"mtime":1616428988008,"results":"63","hashOfConfig":"41"},{"size":423,"mtime":1616428988008,"results":"64","hashOfConfig":"41"},{"size":442,"mtime":1616439275520,"results":"65","hashOfConfig":"41"},{"size":718,"mtime":1616428988008,"results":"66","hashOfConfig":"41"},{"size":1669,"mtime":1616428988008,"results":"67","hashOfConfig":"41"},{"size":204,"mtime":1616428988008,"results":"68","hashOfConfig":"41"},{"size":4488,"mtime":1616435479271,"results":"69","hashOfConfig":"41"},{"size":204,"mtime":1616428988008,"results":"70","hashOfConfig":"41"},{"size":1084,"mtime":1616429996648,"results":"71","hashOfConfig":"41"},{"size":1594,"mtime":1616429732538,"results":"72","hashOfConfig":"41"},{"size":494,"mtime":1616428988008,"results":"73","hashOfConfig":"41"},{"size":1886,"mtime":1616440910326,"results":"74","hashOfConfig":"41"},{"size":900,"mtime":1616437184276,"results":"75","hashOfConfig":"41"},{"size":1786,"mtime":1616438467069,"results":"76","hashOfConfig":"41"},{"size":6160,"mtime":1616439023148,"results":"77","hashOfConfig":"41"},{"size":707,"mtime":1616438198981,"results":"78","hashOfConfig":"41"},{"size":219,"mtime":1616439258436,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"csj994",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/index.js",[],["163","164"],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/App.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/layout/Navbar.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/layout/Footer.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Home.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/TopDinos.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Dino.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Table.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/CardGame.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Periods.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/Favourite.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/FormLogIn.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/FormSignUp.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/pages/EditDino.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/layout/SidebarData.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/HomeComponent/HomeComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/TopDinosComponent/TopDinosComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/DinoComponent/DinoComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/TableComponent/TableComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/CardGameComponent/CardGameComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/PeriodsComponent/PeriodsComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FavouriteComponent/FavouriteComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormLogInComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSignUpComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/AddDinoComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/HomeComponent/PaginationComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormLogIn.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSuccessLogIn.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSignUp.js",["165"],"import \"./Form.css\";\nimport useFormSignUp from \"./useFormSignUp\";\nimport validateFormSignUp from \"./validateFormSignUp\";\nimport jwt_decode from \"jwt-decode\";\n\nconst FormSignUp = ({ submitForm }) => {\n  const { handleChange, values, handleSubmit, errors } = useFormSignUp(\n    submitForm,\n    validateFormSignUp\n  );\n\n  // const config = {\n  //   method: \"POST\",\n  //   mode: \"cors\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   body: JSON.stringify({\n  //     username: \"mark@mail.com\",\n  //     password: \"dino\"\n  //   })\n  // };\n  // // const request = new Request(\"http://localhost:8000/login\", config);\n  // fetch(\"http://localhost:8000/login\", config).then(response =>\n  //   response\n  //     .json()\n  //     .then(response => {\n  //       console.log(\"Respuesta ok: \", response);\n  //       localStorage.setItem(\"mitoken\", response.token);\n\n  //       const decoded = jwt_decode(response.token);\n  //       console.log(decoded);\n\n  //       var decodedHeader = jwt_decode(response.token, { header: true });\n  //       console.log(decodedHeader);\n  //     })\n  //     .catch(error => console.log(\"Erorr: \", error))\n  // );\n\n  return (\n    <div className=\"form-content\">\n      <form action=\"\" onSubmit={handleSubmit}>\n        <h1>Begin your journey in DinoWord by creating an account</h1>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Your name\n          </label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            className=\"input-field\"\n            placeholder=\"Enter your name\"\n            value={values.name}\n            onChange={handleChange}\n          />\n          {/* If value of property name is empty it will return value \n          of \"name\" property of \"errors\" object inside of parragraph. \n          The same for every input field*/}\n          {errors.name && <p>{errors.name}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"lastname\" className=\"form-label\">\n            Your lastname\n          </label>\n          <input\n            id=\"lastname\"\n            type=\"text\"\n            name=\"lastname\"\n            className=\"input-field\"\n            placeholder=\"Enter your lastname\"\n            value={values.lastname}\n            onChange={handleChange}\n          />\n          {errors.lastname && <p>{errors.lastname}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"birthdate\" className=\"form-label\">\n            Your birthdate\n          </label>\n          <input\n            id=\"birthdate\"\n            type=\"date\"\n            name=\"birthdate\"\n            className=\"input-field\"\n            placeholder=\"Enter your birthdate\"\n            value={values.birthdate}\n            onChange={handleChange}\n          />\n          {errors.birthdate && <p>{errors.birthdate}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Your email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"username\"\n            className=\"input-field\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"password\" className=\"form-label\">\n            Your password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            className=\"input-field\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n          {errors.password && <p>{errors.password}</p>}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"passwordConfirm\" className=\"form-label\">\n            Repeat password\n          </label>\n          <input\n            id=\"passwordConfirm\"\n            type=\"password\"\n            name=\"passwordConfirm\"\n            className=\"input-field\"\n            placeholder=\"Repeat your password\"\n            value={values.passwordConfirm}\n            onChange={handleChange}\n          />\n          {errors.passwordConfirm && <p>{errors.passwordConfirm}</p>}\n        </div>\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormSignUp;\n","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/FormSuccess.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/DinoCardComponent/DinoCardComponent.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/useFormLogIn.js",["166"],"import { useState, useEffect } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { urlApi } from \"../../App\";\n\n//Creating a custom hook for form validation\n\nconst useForm = (callback, validateForm) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n    console.log(errors);\n    setErrors(validateForm(values));\n    setIsSubmitting(true);\n    // console.log(errors);\n    console.log(values);\n\n    fetch(`${urlApi}/login`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(\"Respuesta ok: \", response);\n          localStorage.setItem(\"mitoken\", response.token);\n\n          const decoded = jwt_decode(response.token);\n          console.log(decoded);\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useForm;\n","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/validateFormLogIn.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/useFormSignUp.js",["167","168","169"],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/FormComponents/validateFormSignUp.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/useFormAddDino.js",["170","171"],"import { useState, useEffect } from \"react\";\nimport {urlApi} from \"../../App\";\nimport jwt_decode from \"jwt-decode\";\n\n\n//Creating a custom hook for form validation\n\nconst useFormAddDino = (callback, validateFormAddDino) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    lastname: \"\",\n    birthdate: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  });\n\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n\n    setErrors(validateFormAddDino(values));\n    setIsSubmitting(true);\n\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"lastname\", values.lastname);\n    formData.append(\"birthdate\", values.birthdate);\n    formData.append(\"username\", values.username);\n    formData.append(\"password\", values.password);\n\n    console.log(formData);\n    console.log(values);\n\n    fetch(`${urlApi}/user/register`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      body:formData,\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  //Check if there are not errors and if not then return isSubmitting\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useFormAddDino;\n","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/AddDinoForm.js",["172","173","174","175"],"import React from \"react\";\nimport { urlApi } from \"../../App\";\nimport \"../FormComponents/Form.css\";\nimport useFormAddDino from \"./useFormAddDino\";\nimport validateFormAddDino from \"./validateFormAddDino\";\n\n\n\nexport default function AddDinoForm({submitForm}) {\n  const { handleChange, values, handleSubmit, errors } = useFormAddDino(\n    submitForm,\n    validateFormAddDino\n  );\n\n\n\n\n  // const token = localStorage.getItem(\"mitoken\");\n\n  // const config = {\n  //   headers: {\n  //     Authorization: `Bearer ${token}`\n  //   }\n  // };\n\n  // fetch(`${urlApi}/dinosaur`, config)\n  //   .then(res => res.json())\n  //   .then(res => console.log(res))\n  //   .catch(err => console.log(\"Error: \", err));\n\n  return (\n    <div className=\"form-content\">\n      <form action=\"\" onSubmit={handleSubmit}>\n        <h1>Create a new dino in few steps</h1>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Dinosaur name\n          </label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            className=\"input-field\"\n            placeholder=\"Enter dino name\"\n            //   value={values.name}\n            //   onChange={handleChange}\n          />\n          {/* If value of property name is empty it will return value \n          of \"name\" property of \"errors\" object inside of parragraph. \n          The same for every input field*/}\n          {/* {errors.name && <p>{errors.name}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"weight\" className=\"form-label\">\n            Weight of dinosaur\n          </label>\n          <input\n            id=\"weight\"\n            type=\"text\" // maybe need to change to a number?\n            name=\"weight\"\n            className=\"input-field\"\n            placeholder=\"Enter weight of dino\"\n            //   value={values.lastname}\n            //   onChange={handleChange}\n          />\n          {/* {errors.lastname && <p>{errors.lastname}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"height\" className=\"form-label\">\n            Height of dinosaur\n          </label>\n          <input\n            id=\"height\"\n            type=\"text\" // maybe need to change to a number?\n            name=\"height\"\n            className=\"input-field\"\n            placeholder=\"Enter height of dino\"\n            //   value={values.birthdate}\n            //   onChange={handleChange}\n          />\n          {/* {errors.birthdate && <p>{errors.birthdate}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"lenght\" className=\"form-label\">\n            Enter length of dinosaur\n          </label>\n          <input\n            id=\"lenght\"\n            type=\"email\" // maybe need to change to a number?\n            name=\"lenght\"\n            className=\"input-field\"\n            placeholder=\"Enter length of dino\"\n            //   value={values.email}\n            //   onChange={handleChange}\n          />\n          {/* {errors.email && <p>{errors.email}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"top_speed\" className=\"form-label\">\n            Enter top speed of dinosaur\n          </label>\n          <input\n            id=\"top_speed\"\n            type=\"text\" // maybe need to change to a number?\n            name=\"top_speed\"\n            className=\"input-field\"\n            placeholder=\"Enter top speed of dinos\"\n            //   value={values.password}\n            //   onChange={handleChange}\n          />\n          {/* {errors.password && <p>{errors.password}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"period\" className=\"form-label\">\n            Choose period when lived dinosaur:\n          </label>\n          <select\n            id=\"period\"\n            name=\"period\"\n            className=\"input-field\"\n            //   value={values.passwordConfirm}\n            //   onChange={handleChange}\n          >\n            <option value=\"1\">Triassic</option>\n            <option value=\"2\">Jurasic</option>\n            <option value=\"3\">Cretaceous</option>\n          </select>\n          {/* {errors.passwordConfirm && <p>{errors.passwordConfirm}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"diet\" className=\"form-label\">\n            Choose diet of dinosaur:\n          </label>\n          <select\n            id=\"diet\"\n            name=\"diet\"\n            className=\"input-field\"\n            //   value={values.passwordConfirm}\n            //   onChange={handleChange}\n          >\n            <option value=\"1\">Carnivore</option>\n            <option value=\"2\">Herbivore</option>\n            <option value=\"3\">Piscivore</option>\n          </select>\n          {/* {errors.passwordConfirm && <p>{errors.passwordConfirm}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"continent\" className=\"form-label\">\n            Choose continent where was found dinosaur:\n          </label>\n          <select\n            id=\"continent\"\n            name=\"continent\"\n            className=\"input-field\"\n            //   value={values.passwordConfirm}\n            //   onChange={handleChange}\n          >\n            <option value=\"1\">South America</option>\n            <option value=\"2\">North America</option>\n            <option value=\"3\">Europe</option>\n            <option value=\"4\">Asia</option>\n            <option value=\"5\">Africa</option>\n            <option value=\"6\">Australia</option>\n          </select>\n          {/* {errors.passwordConfirm && <p>{errors.passwordConfirm}</p>} */}\n        </div>\n        <div className=\"form-inputs\">\n          <label htmlFor=\"img\" className=\"form-label\">\n            Add an awesome image of dinosaur\n          </label>\n          <input\n            className=\"form-control-file mb-3\"\n            type=\"file\"\n            name=\"img\"\n            // onChange={handleFile}\n          />\n          {/* {errors.passwordConfirm && <p>{errors.passwordConfirm}</p>} */}\n        </div>\n        <button type=\"submit\">Add new dinosaur</button>\n      </form>\n    </div>\n  );\n}\n","/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/validateFormAddDino.js",[],"/home/roman/Documentos/Final_project_for_Bootcamp_Front_End/dinoworld/src/components/EditDinoComponen/FormSuccessAddDino.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":62,"column":6,"nodeType":"186","endLine":62,"endColumn":14,"suggestions":"187"},{"ruleId":"180","severity":1,"message":"181","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"180","severity":1,"message":"188","line":48,"column":11,"nodeType":"182","messageId":"183","endLine":48,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":75,"column":6,"nodeType":"186","endLine":75,"endColumn":14,"suggestions":"189"},{"ruleId":"180","severity":1,"message":"181","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":18},{"ruleId":"184","severity":1,"message":"185","line":69,"column":6,"nodeType":"186","endLine":69,"endColumn":14,"suggestions":"190"},{"ruleId":"180","severity":1,"message":"191","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"192","line":10,"column":11,"nodeType":"182","messageId":"183","endLine":10,"endColumn":23},{"ruleId":"180","severity":1,"message":"193","line":10,"column":25,"nodeType":"182","messageId":"183","endLine":10,"endColumn":31},{"ruleId":"180","severity":1,"message":"194","line":10,"column":47,"nodeType":"182","messageId":"183","endLine":10,"endColumn":53},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["197"],"'data' is assigned a value but never used.",["198"],["199"],"'urlApi' is defined but never used.","'handleChange' is assigned a value but never used.","'values' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},{"desc":"200","fix":"203"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"204","text":"205"},{"range":"206","text":"205"},{"range":"207","text":"205"},[1497,1505],"[callback, errors, isSubmitting]",[1783,1791],[1682,1690]]