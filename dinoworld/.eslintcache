[{"/home/roman/Documentos/Repo/dinoworld/src/index.js":"1","/home/roman/Documentos/Repo/dinoworld/src/App.js":"2","/home/roman/Documentos/Repo/dinoworld/src/layout/Navbar.js":"3","/home/roman/Documentos/Repo/dinoworld/src/layout/Footer.js":"4","/home/roman/Documentos/Repo/dinoworld/src/pages/Home.js":"5","/home/roman/Documentos/Repo/dinoworld/src/pages/TopDinos.js":"6","/home/roman/Documentos/Repo/dinoworld/src/pages/Dino.js":"7","/home/roman/Documentos/Repo/dinoworld/src/pages/Table.js":"8","/home/roman/Documentos/Repo/dinoworld/src/pages/CardGame.js":"9","/home/roman/Documentos/Repo/dinoworld/src/pages/Periods.js":"10","/home/roman/Documentos/Repo/dinoworld/src/pages/Favourite.js":"11","/home/roman/Documentos/Repo/dinoworld/src/pages/FormLogIn.js":"12","/home/roman/Documentos/Repo/dinoworld/src/pages/FormSignUp.js":"13","/home/roman/Documentos/Repo/dinoworld/src/pages/EditDino.js":"14","/home/roman/Documentos/Repo/dinoworld/src/components/TopDinosComponent/TopDinosComponent.js":"15","/home/roman/Documentos/Repo/dinoworld/src/components/DinoComponent/DinoComponent.js":"16","/home/roman/Documentos/Repo/dinoworld/src/components/TableComponent/TableComponent.js":"17","/home/roman/Documentos/Repo/dinoworld/src/components/PeriodsComponent/PeriodsComponent.js":"18","/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/CardGameComponent.js":"19","/home/roman/Documentos/Repo/dinoworld/src/components/FavouriteComponent/FavouriteComponent.js":"20","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogInComponent.js":"21","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUpComponent.js":"22","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoComponent.js":"23","/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/HomeComponent.js":"24","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogIn.js":"25","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccessLogIn.js":"26","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUp.js":"27","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccess.js":"28","/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/PaginationComponent.js":"29","/home/roman/Documentos/Repo/dinoworld/src/components/DinoCardComponent/DinoCardComponent.js":"30","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoForm.js":"31","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/FormSuccessAddDino.js":"32","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormLogIn.js":"33","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormLogIn.js":"34","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormSignUp.js":"35","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormSignUp.js":"36","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/useFormAddDino.js":"37","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/validateFormAddDino.js":"38","/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/DinoCardGameComponent.js":"39"},{"size":244,"mtime":1610638756874,"results":"40","hashOfConfig":"41"},{"size":1630,"mtime":1617142132355,"results":"42","hashOfConfig":"41"},{"size":3591,"mtime":1617142108862,"results":"43","hashOfConfig":"41"},{"size":529,"mtime":1616177336399,"results":"44","hashOfConfig":"41"},{"size":1055,"mtime":1617139092972,"results":"45","hashOfConfig":"41"},{"size":587,"mtime":1616615654494,"results":"46","hashOfConfig":"41"},{"size":168,"mtime":1616177519011,"results":"47","hashOfConfig":"41"},{"size":1183,"mtime":1617137413957,"results":"48","hashOfConfig":"41"},{"size":696,"mtime":1616783802248,"results":"49","hashOfConfig":"41"},{"size":307,"mtime":1616178212730,"results":"50","hashOfConfig":"41"},{"size":701,"mtime":1616693995959,"results":"51","hashOfConfig":"41"},{"size":319,"mtime":1616521899767,"results":"52","hashOfConfig":"41"},{"size":187,"mtime":1616177997405,"results":"53","hashOfConfig":"41"},{"size":198,"mtime":1616177560629,"results":"54","hashOfConfig":"41"},{"size":427,"mtime":1616178627837,"results":"55","hashOfConfig":"41"},{"size":1880,"mtime":1616693635695,"results":"56","hashOfConfig":"41"},{"size":5186,"mtime":1617100725784,"results":"57","hashOfConfig":"41"},{"size":241,"mtime":1616177213315,"results":"58","hashOfConfig":"41"},{"size":1650,"mtime":1617009023373,"results":"59","hashOfConfig":"41"},{"size":373,"mtime":1616613730648,"results":"60","hashOfConfig":"41"},{"size":529,"mtime":1616693785726,"results":"61","hashOfConfig":"41"},{"size":423,"mtime":1616325902323,"results":"62","hashOfConfig":"41"},{"size":442,"mtime":1616508019582,"results":"63","hashOfConfig":"41"},{"size":760,"mtime":1617142642740,"results":"64","hashOfConfig":"41"},{"size":1669,"mtime":1616524138952,"results":"65","hashOfConfig":"41"},{"size":204,"mtime":1616330404495,"results":"66","hashOfConfig":"41"},{"size":3643,"mtime":1616693800038,"results":"67","hashOfConfig":"41"},{"size":702,"mtime":1617100649236,"results":"68","hashOfConfig":"41"},{"size":773,"mtime":1617143085160,"results":"69","hashOfConfig":"41"},{"size":2073,"mtime":1617139080940,"results":"70","hashOfConfig":"41"},{"size":6511,"mtime":1616697916569,"results":"71","hashOfConfig":"41"},{"size":219,"mtime":1616508019582,"results":"72","hashOfConfig":"41"},{"size":1883,"mtime":1616693877796,"results":"73","hashOfConfig":"41"},{"size":494,"mtime":1616329809889,"results":"74","hashOfConfig":"41"},{"size":1548,"mtime":1617100631059,"results":"75","hashOfConfig":"41"},{"size":900,"mtime":1616694125688,"results":"76","hashOfConfig":"41"},{"size":2368,"mtime":1616703114208,"results":"77","hashOfConfig":"41"},{"size":772,"mtime":1616693582373,"results":"78","hashOfConfig":"41"},{"size":1066,"mtime":1617008941420,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"11cf2xb",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},"/home/roman/Documentos/Repo/dinoworld/src/index.js",[],["166","167"],"/home/roman/Documentos/Repo/dinoworld/src/App.js",[],"/home/roman/Documentos/Repo/dinoworld/src/layout/Navbar.js",["168","169"],"import * as FaIcons from \"react-icons/fa\";\nimport { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./NavbarStyle.css\";\nimport { DinoContext } from \"../App\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IconName from \"react-icons/md\";\nimport jwt_decode from \"jwt-decode\";\n\nfunction Navbar() {\n  const { jwt, setJwt } = useContext(DinoContext);\n\n  const SidebarData = [\n    {\n      title: \"Dinos\",\n      path: \"/\",\n      icon: <AiIcons.AiFillHome />,\n      cName: \"nav-text\"\n    },\n    {\n      title: \"Periods\",\n      path: \"/Periods\",\n      icon: <IconName.MdTimeline />,\n      cName: \"nav-text\"\n    },\n    {\n      title: \"Top Dinos\",\n      path: \"/TopDinos\",\n      icon: <FaIcons.FaTrophy />,\n      cName: \"nav-text\"\n    },\n    {\n      title: \"Table\",\n      path: \"/Table\",\n      icon: <FaIcons.FaTable />,\n      cName: \"nav-text\"\n    },\n    {\n      title: \"CardGame\",\n      path: \"/CardGame\",\n      icon: <FaIcons.FaGamepad />,\n      cName: \"nav-text\"\n    },\n    {\n      title: \"Favourite\",\n      path: \"/Favourite\",\n      icon: <IconName.MdFavorite />,\n      cName: \"nav-text\"\n    },\n    {\n      title: \"EditDino\",\n      path: \"/EditDino\",\n      icon: <FaIcons.FaEdit />,\n      cName: \"nav-text\"\n    }\n  ];\n\n  //Remove token from local storage when \"LogOut\" button is pressed\n  function removeToken() {\n    localStorage.removeItem(\"mitoken\");\n    setJwt(null);\n  }\n\n  const [data, setData] = useState(SidebarData);\n\n  //Depending on if user is logged and if has role ADMIN, we reduce array of data for navbar\n  if (!jwt) {\n    SidebarData.length -= 2;\n  } else {\n    let decoded = jwt_decode(jwt);\n    if (decoded.roles[0] !== \"ROLE_ADMIN\") {\n      SidebarData.length -= 1;\n    }\n  }\n\n  //Declare a state of side bar and give to it value \"false\"\n  const [sidebar, setSidebar] = useState(false);\n\n  //Using useState we change the value of sidebar variable and can show sidebar an close it\n  const showsidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <Link to=\"#\" className=\"menu-bars\">\n          <FaIcons.FaBars onMouseEnter={showsidebar} />\n        </Link>\n        <div className=\"logo\">\n          <Link to=\"/\">\n            <span>dinoworld</span>\n          </Link>\n        </div>\n        {jwt ? (\n          <div className=\"logIn\">\n            <Link to=\"/\">\n              <button onClick={() => removeToken()}>\n                <span>Log Out</span>\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"logIn\">\n            <Link to=\"/FormLogIn\">\n              <button>\n                <span>Log In</span>\n              </button>\n            </Link>\n            <Link to=\"/FormSignUp\">\n              <button>\n                <span>Sign Up</span>\n              </button>\n            </Link>\n          </div>\n        )}\n      </div>\n\n      {/* Changes a class depending of a state of side bar */}\n\n      <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n        <ul\n          className=\"nav-menu-items\"\n          onClick={showsidebar} /*</nav>onMouseLeave={showsidebar}*/\n        >\n          {/* The \"map\" method from stored data made a bunch of links for a sidebar */}\n          {SidebarData.map((item, index) => {\n            return (\n              <li key={index} className={item.cName}>\n                <Link to={item.path}>\n                  {item.icon}\n                  <span>{item.title}</span>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","/home/roman/Documentos/Repo/dinoworld/src/layout/Footer.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Home.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/TopDinos.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Dino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Table.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/CardGame.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Periods.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/Favourite.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/FormLogIn.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/FormSignUp.js",[],"/home/roman/Documentos/Repo/dinoworld/src/pages/EditDino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/TopDinosComponent/TopDinosComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/DinoComponent/DinoComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/TableComponent/TableComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/PeriodsComponent/PeriodsComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/CardGameComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FavouriteComponent/FavouriteComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogInComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUpComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/HomeComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormLogIn.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccessLogIn.js",[],["170","171"],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSignUp.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/FormSuccess.js",["172"],"import React from \"react\";\nimport { urlApi } from \"../../App\";\n\n// import { values } from \"./useFormSignUp\";\n\nfunction FormSuccess() {\n  // console.log(values);\n  // fetch(`${urlApi}/register/user`, {\n  //   method: \"POST\",\n  //   cors: \"CORS\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   body: JSON.stringify(values)\n  // }).then(response =>\n  //   response\n  //     .json()\n  //     .then(response => {\n  //       console.log(response);\n  //     })\n  //     .catch(error => console.log(\"Erorr: \", error))\n  // );\n\n  return (\n    <div>\n      <div>Thanks for create your account</div>\n      <img src=\"\" alt=\"success\" />\n    </div>\n  );\n}\n\nexport default FormSuccess;\n","/home/roman/Documentos/Repo/dinoworld/src/components/HomeComponent/PaginationComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/DinoCardComponent/DinoCardComponent.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/AddDinoForm.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/FormSuccessAddDino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormLogIn.js",["173"],"import { useState, useEffect } from \"react\";\n// import jwt_decode from \"jwt-decode\";\nimport { urlApi } from \"../../App\";\nimport { DinoContext } from \"../../App\";\nimport { useContext } from \"react\";\n\n//Creating a custom hook for form validation\n\nconst useForm = (callback, validateForm) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const { setJwt } = useContext(DinoContext);\n\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n    console.log(errors);\n    setErrors(validateForm(values));\n    setIsSubmitting(true);\n    // console.log(errors);\n    console.log(values);\n\n    fetch(`${urlApi}/login`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(\"Respuesta: \", response);\n          if (response.code === 401) {\n            alert(\"Invalid email or password\"); // Need to add some validation here\n          } else {\n            localStorage.setItem(\"mitoken\", response.token);\n            // const decoded = jwt_decode(response.token);\n\n            setJwt(response.token);\n          }\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useForm;\n","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormLogIn.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/useFormSignUp.js",["174"],"import { useState, useEffect } from \"react\";\nimport { urlApi } from \"../../App\";\n// import jwt_decode from \"jwt-decode\";\n\n//Creating a custom hook for form validation\n\nconst useFormSignUp = (callback, validateForm) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    lastname: \"\",\n    birthdate: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\"\n  });\n\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n\n    setErrors(validateForm(values));\n    setIsSubmitting(true);\n\n    console.log(values);\n\n    fetch(`${urlApi}/register/user`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(values)\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  //Check if there are not errors and if not then return isSubmitting\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleChange, values, handleSubmit, errors };\n};\n\nexport default useFormSignUp;\n","/home/roman/Documentos/Repo/dinoworld/src/components/FormComponents/validateFormSignUp.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/useFormAddDino.js",["175"],"import { useState, useEffect } from \"react\";\nimport { urlApi } from \"../../App\";\n\n//Creating a custom hook for form validation\n\nconst useFormAddDino = (callback, validateFormAddDino) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    weight: \"\",\n    height: \"\",\n    lenght: \"\",\n    top_speed: \"\",\n    period: \"\",\n    diet: \"\",\n    continent: \"\",\n    top: \"\",\n    info: \"\",\n    img: []\n  });\n\n  //\n  const [errors, setErrors] = useState({});\n\n  //Assign isSubmitteng to false before handleSubmit is processed\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  //Handlind form inserts and set them to the values\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  //Handling inserted file (img)\n\n  const handleFile = e => {\n    // console.log(values);\n    // console.log(e.target);\n    const { name, files } = e.target;\n    // console.log(name, files);\n    setValues({\n      ...values,\n      [name]: files[0]\n    });\n  };\n\n  const handleSubmit = e => {\n    //Prevent default refresh when submitting a form\n\n    e.preventDefault();\n\n    setErrors(validateFormAddDino(values));\n    setIsSubmitting(true);\n\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n    formData.append(\"weight\", values.weight);\n    formData.append(\"height\", values.height);\n    formData.append(\"lenght\", values.lenght);\n    formData.append(\"top_speed\", values.top_speed);\n    formData.append(\"period\", values.period);\n    formData.append(\"diet\", values.diet);\n    formData.append(\"continent\", values.continent);\n    formData.append(\"top\", values.top);\n    formData.append(\"info\", values.info);\n    formData.append(\"img\", values.img);\n\n    console.log(formData);\n\n    fetch(`${urlApi}/register/dinosaur`, {\n      method: \"POST\",\n      cors: \"CORS\",\n      body: formData\n    }).then(response =>\n      response\n        .json()\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => console.log(\"Erorr: \", error))\n    );\n  };\n\n  //Check if there are not errors and if not then return isSubmitting\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  return { handleFile, handleChange, values, handleSubmit, errors };\n};\n\nexport default useFormAddDino;\n","/home/roman/Documentos/Repo/dinoworld/src/components/EditDinoComponen/validateFormAddDino.js",[],"/home/roman/Documentos/Repo/dinoworld/src/components/CardGameComponent/DinoCardGameComponent.js",["176","177"],"import { urlApi } from \"../../App\";\nimport { useState } from \"react\";\n\nexport default function DinoCardGameComponent({\n  ID,\n  name,\n  img,\n  clickedNames,\n  setClickedNames,\n  clickedID,\n  setClickedID\n}) {\n  // const { jwt } = useContext(DinoContext);\n  // const [clickedNames, setClickedName] = useState([]);\n  // const [clickedID, setClickedID] = useState([]);\n\n  function checkForMatch() {\n    const firstDino = clickedNames[0];\n    const secondDino = clickedNames[1];\n\n    if (firstDino === secondDino) {\n      alert(\"You found the match\");\n    }\n  }\n\n  function flipCard() {\n    console.log(`card fliped ${ID}`);\n    // const newClickedName = clickedName.push(name);\n    // const newClickedID = clickedID.push(ID);\n\n    setClickedNames(clickedNames => [...clickedNames, name]);\n    setClickedID(clickedID => [...clickedID, ID]);\n\n    console.log(clickedNames.length);\n  }\n\n  return (\n    <>\n      <div className=\"grid-card\" onClick={() => flipCard()}>\n        <img src={`${urlApi}/images/${img}`} alt=\"\" />\n        <h3>{name}</h3>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":64,"column":10,"nodeType":"184","messageId":"185","endLine":64,"endColumn":14},{"ruleId":"182","severity":1,"message":"186","line":64,"column":16,"nodeType":"184","messageId":"185","endLine":64,"endColumn":23},{"ruleId":"178","replacedBy":"187"},{"ruleId":"180","replacedBy":"188"},{"ruleId":"182","severity":1,"message":"189","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":70,"column":6,"nodeType":"192","endLine":70,"endColumn":14,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"191","line":63,"column":6,"nodeType":"192","endLine":63,"endColumn":14,"suggestions":"194"},{"ruleId":"190","severity":1,"message":"191","line":92,"column":6,"nodeType":"192","endLine":92,"endColumn":14,"suggestions":"195"},{"ruleId":"182","severity":1,"message":"196","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":18},{"ruleId":"182","severity":1,"message":"197","line":17,"column":12,"nodeType":"184","messageId":"185","endLine":17,"endColumn":25},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.",["198"],["199"],"'urlApi' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["200"],["201"],["202"],"'useState' is defined but never used.","'checkForMatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"203","fix":"205"},{"desc":"203","fix":"206"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"207","text":"208"},{"range":"209","text":"208"},{"range":"210","text":"208"},[1786,1794],"[callback, errors, isSubmitting]",[1445,1453],[2252,2260]]